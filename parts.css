@charset "utf-8";

/*==================================================
4.LoadingのためのCSS(4-1-4)
==================================================*/
#splash {
  position: fixed;
  z-index: 999;
  width: 100%;
  height: 100%;
  background: #fff;
  text-align: center;
}

#splash_logo {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#splash_logo img {
  width: 260px;

}

.fadeUp {
  animation-name: fadeUpAnime;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeUpAnime {
  from {
    opacity: 0;
    transform: translateY(100px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}


/*==================================================
5.スクロールされたらヘッダーが上部に固定(5-1-6)
==================================================*/
/*========= 上部固定させるためのCSS ===============*/
#header {
  height: 70px;
  /*高さ指定*/
  width: 100%;
  /*横幅指定*/

}

/*JSを使いfixedクラスが付与された際の設定*/
#header.fixed {
  position: fixed;
  /*fixedを設定して固定*/
  z-index: 999;
  /*最前面へ*/
  top: 0;
  /*位置指定*/
  left: 0;
  /*位置指定*/
  animation:upanime 0.5s forwards;
}
@keyframes upanime{
  from{
    opacity: 0;
    transform: translateY(-70px);
  }
  to{
    opacity: 1;
    transform: translateY(0);
  }
}


/*==================================================
6.ヘッダー内のナビゲーションの中心から外に線が伸びる（下部）
(5-3-1) 
ホバー時の文字の色は黒、線の色は#69be27、高さ2px
位置は、左から0 幅は100%とする
=============================================*/

.gnavi {
  display: flex;
  flex-wrap: wrap;
  margin: 0 0 50px 0;
  list-style: none;
}

.gnavi li a {
  display: block;
  padding-left: 0 text-decoration
}

.gnavi li a {
  /*線の基点とするためrelativeを指定*/
  position: relative;
}

.gnavi li.current a,
.gnavi li a:hover {
  color: #000000;
}

.gnavi li a::after {
  content: '';
  /*絶対配置で線の位置を決める*/
  position: absolute;
  bottom: 0;
  left: 0;
  /*線の形状*/
  width: 100%;
  height: 2px;
  background: #69be27;
  /*アニメーションの指定*/
  transition: all .3s;
  transform: scale(0, 1);
  /*X方向0、Y方向1*/
  transform-origin: center top;
  /*上部中央基点*/
}

/*現在地とhoverの設定*/
.gnavi li.current a::after,
.gnavi li a:hover::after {
  transform: scale(1, 1);
  /*X方向にスケール拡大*/
}

/*==================================================
7と8.スライダーのためのcss(6-1-1)
矢印の色は #69be27
ドットナビゲーションは不要
スマートフォン用の画像設定は任意
===================================================*/

.slider-item_title {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: white;
  z-index: 2;
  /* Ensure it's above the slides */
}

.slider-item_title h1 {
  color: white;
  font-size: 54px;
  font-family: 'Montserrat', sans-serif;
}

.slider {
  position: relative;
  z-index: 1;
  /*↑z-indexの値をh1のz-indexの値よりも小さくして背景に回す*/
  height: 70vh;
  /*スライダー全体の縦幅を画面70vh）にする*/
}

/*　背景画像設定　*/

.slider-item01 {
  background: url(../images/mv1.jpg);
}

.slider-item02 {
  background: url(../images/mv2.jpg);
}

.slider-item03 {
  background: url(../images/mv3.jpg);
}

.slider-item {
  width: 100%;
  /*各スライダー全体の横幅を画面の高さいっぱい（100%）にする*/
  height: 70vh;
  /*各スライダー全体の縦幅を画面の高さいっぱい（70vh）にする*/
  background-repeat: no-repeat;
  /*背景画像をリピートしない*/
  background-position: center;
  /*背景画像の位置を中央に*/
  background-size: cover;
  /*背景画像が.slider-item全体を覆い表示*/
}

/*矢印の設定*/

.slick-prev,
.slick-next {
  position: absolute;
  z-index: 3;
  top: 42%;
  cursor: pointer;
  /*マウスカーソルを指マークに*/
  outline: none;
  /*クリックをしたら出てくる枠線を消す*/
  border-top: 2px solid #69be27;
  /*矢印の色*/
  border-right: 2px solid #69be27;
  /*矢印の色*/
  height: 25px;
  width: 25px;
}

.slick-prev {
  /*戻る矢印の位置と形状*/
  left: 2.5%;
  transform: rotate(-135deg);
}

.slick-next {
  /*次へ矢印の位置と形状*/
  right: 2.5%;
  transform: rotate(45deg);
}




/*==================================================
9.スクロールダウンのためのCSS(9-1-1)
===================================================*/
/*スクロールダウン全体の場所*/
.scrolldown1 {
  /*描画位置※位置は適宜調整*/
  position: absolute;
  left: 50%;
  bottom: 10px;
  z-index: 100;
  /*全体の高さ*/
  height: 50px;
}

/*Scrollテキストの描写*/
.scrolldown1 span {
  /*描画位置*/
  position: absolute;
  left: -15px;
  top: -15px;
  /*テキストの形状*/
  color: #eee;
  font-family: 'Oswald', sans-serif;

  font-size: 0.7rem;
  letter-spacing: 0.05em;
}

/* 線の描写 */
.scrolldown1::after {
  content: "";
  /*描画位置*/
  position: absolute;
  top: 0;
  /*線の形状*/
  width: 1px;
  height: 30px;
  background: #eee;
  /*線の動き1.4秒かけて動く。永遠にループ*/
  animation: pathmove 1.4s ease-in-out infinite;
  opacity: 0;
}

/*高さ・位置・透過が変化して線が上から下に動く*/
@keyframes pathmove {
  0% {
    height: 0;
    top: 0;
    opacity: 0;
  }

  30% {
    height: 30px;
    opacity: 1;
  }

  100% {
    height: 0;
    top: 50px;
    opacity: 0;
  }
}






/*==================================================
10.class="zoomIn"を使い、画像が拡大する
transformとtransitionプロパティを使う
===================================*/

.zoomIn img {
  transform: scale(1);
  transition: .3s ease-in-out;
  /*移り変わる速さを変更したい場合はこの数値を変更*/
}

.zoomIn a:hover img {
  /*hoverした時の変化*/
  transform: scale(1.2);
  /*拡大の値を変更したい場合はこの数値を変更*/
}

/*　画像のマスク　*/

.mask {
  display: block;
  line-height: 0;
  /*行の高さを0にする*/
  overflow: hidden;
  /*拡大してはみ出る要素を隠す*/
}


/*==================================================
11.class="bgUD"を使い、
背景が出現＋テキストが上から出現するCSSを記述
文字は<span class="cap>...</span>を使用
背景色は#69be27　文字の色は白　フォントサイズは任意
===================================*/

/*== ボタン共通設定 */
.bgUD {
  position: relative;
  /*テキストの基点となる位置を定義*/
}

.bgUD span.mask {
  position: relative;
  /*背景色の基点となる位置を定義*/
  display: block;
  line-height: 0;
  /*行の高さを0にする*/
  overflow: hidden;
  /*拡大してはみ出る要素を隠す*/
}

.bgUD span.mask::before {
  content: "";
  position: absolute;
  z-index: 2;
  left: 0;
  top: 0;
  opacity: 0;
  transition: .3s ease-in-out;
  /*移り変わる速さを変更したい場合はこの数値を変更*/
  transform: translateY(-100%);
  background: #69be27;
  /*背景色*/
  width: 100%;
  height: 100%;
}

.bgUD:hover span.mask::before {
  /*hoverした時の変化*/
  opacity: 1;
  transform: translateY(0);
}

.bgUD span.cap {
  position: absolute;
  opacity: 0;
  transition: .5s ease-in-out;
  /*移り変わる速さを変更したい場合はこの数値を変更*/
  z-index: 3;
  /*テキストを前面に出す*/
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #fff;
  /*テキストの色を変えたい場合はここを修正*/
  line-height: 1.5;
  /*行の高さを1.5にする*/
}

.bgUD:hover span.cap {
  /*hoverした時の変化*/
  opacity: 1;
}



/*==================================================
12.タブメニュー内の作成 (5-4-1)
tabの形状とarea内のデザイン設定はlayout.cssで設定されているので、
.areaでは表示・非表示をcssで追加
===================================*/
.area {
  display: none;
  opacity: 0;
  background: #fff;
  padding: 50px 20px;
}

.area.is-active {
  display: block;
  animation-name: displayAnime;
  animation-duration: 1s;
  animation-fill-mode: forwards;
}

@keyframes displayAnime {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}


/*==================================================
13と14と15 下に押し込まれるような挙動とマウスがホバーすると
表示するテキストが切り替わる
(7-1-15 と 7-1-42)
===================================*/
.btntextchange {
  /*テキストの基点とするためrelativeを指定*/
  position: relative;
  /*ボタンの形状*/
  border: 1px solid #555;
  border-radius: 25px;
  min-width: 210px;
  padding: 20px;
  text-align: center;
  display: inline-block;
  text-decoration: none;
  color: #333;
  outline: none;
  /*アニメーションの指定*/
  transition: all .2s;
  overflow: hidden;
  /* 追加：子要素が親要素からはみ出さないように */
  box-shadow: 4px 4px 0 #000;
  top: 0;
  left: 0;

}

/*hoverした際の変化*/
.btntextchange:hover {
  border-color: transparent;
  background: #333;
  color: #fff;
  box-shadow: 1px 1px #000;
  top: 5px;
  left: 5px;
}

.btntextchange span {
  /*絶対配置でテキストの位置を決める*/
  position: absolute;
  /* 修正：絶対配置に変更 */
  z-index: 2;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  /*アニメーションの指定*/
  transition: all .5s;
  /*ブロック要素にしてテキスト折り返しなし*/
  display: block;
  white-space: nowrap;
}

/*差し替わるテキストの設定*/
.btntextchange span:nth-child(2) {
  opacity: 0;
  /*透過0に*/
}

/*hoverするとテキストが入れ替わる設定*/
.btntextchange:hover span:nth-child(1) {
  opacity: 0;
  /*透過0に*/
}

.btntextchange:hover span:nth-child(2) {
  opacity: 1;
  /*不透明に*/

}




/*==================================================
16.マウスがホバーすると四角が丸になる(7-1-39)
ボタンの色は#69be27としホバーすると#3b3b3bとなる
ボタンの形状は、border-radius:100%
===================================*/

#page-top a {
  /*ボタンの形状*/
  display: inline-block;
  color: #69be27;
  line-height: 3rem;
  width: 3rem;
  text-decoration: none;
  outline: none;
  /*アニメーションの指定*/
  transition: 3s ease-out;

}

#page-top a:hover {
  border-radius: 100%;
}










/*====================================================================================================
/* 以下は課題以外で必要なCSS設定(ハンバーガーメニュー） */
/*========= ナビゲーションのためのCSS ===============*/
@media screen and (max-width:768px) {
  #g-nav {
    /*position:fixed;にし、z-indexの数値を大きくして前面へ*/
    position: fixed;
    z-index: 999;
    /*ナビのスタート位置と形状*/
    top: 0;
    left: -120%;
    width: 100%;
    height: 100vh;
    /*ナビの高さ*/
    background: #000000e8;
    /*動き*/
    transition: all 0.6s;
  }

  /*アクティブクラスがついたら位置を0に*/
  #g-nav.panelactive {
    left: 0;
  }

  /*ナビゲーションの縦スクロール*/
  #g-nav.panelactive #g-nav-list {
    /*ナビの数が増えた場合縦スクロール*/
    position: fixed;
    z-index: 999;
    width: 100%;
    height: 100vh;
    /*表示する高さ*/
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  /*ナビゲーション*/
  #g-nav ul {
    /*ナビゲーション天地中央揃え*/
    position: absolute;
    z-index: 999;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    flex-direction: column;
  }

  /*リストのレイアウト設定*/

  #g-nav li {
    list-style: none;
    text-align: center;
  }

  #g-nav li a {
    color: var(--white);
    text-decoration: none;
    padding: 10px;
    display: block;
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }

  /*========= ボタンのためのCSS ===============*/
  .openbtn {
    position: fixed;
    z-index: 9999;
    /*ボタンを最前面に*/
    top: 5px;
    left: 10px;
    cursor: pointer;
    width: 50px;
    height: 50px;
  }

  /*×に変化*/
  .openbtn span {
    display: inline-block;
    transition: all .4s;
    position: absolute;
    left: 14px;
    height: 3px;
    border-radius: 2px;
    background-color: var(--green);
    width: 45%;
  }

  .openbtn span:nth-of-type(1) {
    top: 15px;
  }

  .openbtn span:nth-of-type(2) {
    top: 23px;
  }

  .openbtn span:nth-of-type(3) {
    top: 31px;
  }

  .openbtn.active span:nth-of-type(1) {
    top: 18px;
    left: 18px;
    transform: translateY(6px) rotate(-45deg);
    width: 30%;
  }

  .openbtn.active span:nth-of-type(2) {
    opacity: 0;
  }

  .openbtn.active span:nth-of-type(3) {
    top: 30px;
    left: 18px;
    transform: translateY(-6px) rotate(45deg);
    width: 30%;
  }
}
